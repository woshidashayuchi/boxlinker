
user  nginx;
worker_processes  8;

#error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 51200;
events {
    use epoll;
    worker_connections  51200;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    {{- if .HTTPSnippets}}
    {{range $value := .HTTPSnippets}}
    {{$value}}{{end}}
    {{- end}}

    {{if .LogFormat -}}
    log_format  main  '{{.LogFormat}}';
    {{- else -}}
    log_format  main  '$time_iso8601|$remote_addr|$remote_user|$request_method|$uri|'
            '$status|$request_time|$request_length|$body_bytes_sent|$bytes_sent|'
            '$connection|$http_x_forwarded_for|$upstream_addr|$upstream_status|'
            '$upstream_response_time|$args|$http_referer|$http_user_agent';
    {{- end }}
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #server_names_hash_max_size {{.ServerNamesHashMaxSize}};
    #{{if .ServerNamesHashBucketSize}}server_names_hash_bucket_size {{.ServerNamesHashBucketSize}};{{end}}
    server_names_hash_bucket_size 1024;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    {{if .SSLProtocols}}ssl_protocols {{.SSLProtocols}};{{end}}
    {{if .SSLCiphers}}ssl_ciphers "{{.SSLCiphers}}";{{end}}
    {{if .SSLPreferServerCiphers}}ssl_prefer_server_ciphers on;{{end}}
    {{if .SSLDHParam}}ssl_dhparam {{.SSLDHParam}};{{end}}

    {{if .HealthStatus}}
    server {
        listen 80 default_server;
        server_name _;
        location /nginx-health {
            access_log off;
            default_type text/plain;
            return 200 "healthy\n";
        }
    }
    {{end}}
    
    include /etc/nginx/conf.d/*.conf;

    server {
       listen 80;
       server_name _;
       location / {
           access_log off;
           default_type text/plain;
           return 404 "";
        }
    }
}

stream {
    
    include /etc/nginx/conf.d/*.config;
}
