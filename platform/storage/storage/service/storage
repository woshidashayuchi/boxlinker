#!/bin/bash

# chkconfig: 345 80 05
# description: start storage service


restapi_start()
{
    rest_service='/storage/storage/restserver/restapi_server.pyc'
    if [ -f "$rest_service" ]; then
        rest_service='python /storage/storage/restserver/restapi_server.pyc'
    else
        rest_service='/storage/storage/restserver/restapi_server.py'
        if [ -f "$rest_service" ]; then
            rest_service='python /storage/storage/restserver/restapi_server.py'
        else
            echo 'storage restapi file not exists'
        fi
    fi

    pid_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'restapi_server' | wc -l)
    if [ $pid_check -eq 0 ]; then
        $rest_service &> /dev/null &
        if [ $? -eq 0 ]; then
            echo 'service storage api server start OK'
        else
    	    echo 'service storage api server start failure'
        fi
    else
  	echo 'service storage api server is already running'
    fi
}


cephapi_start()
{
    cephapi_service='/storage/storage/ceph/ceph/rpcserver/rpcapi_callserver.pyc'
    if [ -f "$cephapi_service" ]; then
        cephapi_service='python /storage/storage/ceph/ceph/rpcserver/rpcapi_callserver.pyc'
    else
        cephapi_service='/storage/storage/ceph/ceph/rpcserver/rpcapi_callserver.py'
        if [ -f "$cephapi_service" ]; then
            cephapi_service='python /storage/storage/ceph/ceph/rpcserver/rpcapi_callserver.py'
        else
            echo 'storage cephapi file not exists'
        fi
    fi

    pid_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'ceph' | grep 'rpcapi_callserver' | wc -l)
    if [ $pid_check -eq 0 ]; then
        $cephapi_service &> /dev/null &
        if [ $? -eq 0 ]; then
            echo 'service ceph api server start OK'
        else
            echo 'service ceph api server start failure'
        fi
    else
        echo 'service ceph api server is already running'
    fi
}


rpccall_start()
{
    rpccall_service='/storage/storage/rpcserver/rpcapi_callserver.pyc'
    if [ -f "$rpccall_service" ]; then
        rpccall_service='python /storage/storage/rpcserver/rpcapi_callserver.pyc'
    else
        rpccall_service='/storage/storage/rpcserver/rpcapi_callserver.py'
        if [ -f "$rpccall_service" ]; then
            rpccall_service='python /storage/storage/rpcserver/rpcapi_callserver.py'
        else
            echo 'storage rpcapi file not exists'
        fi
    fi

    pid_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'rpcserver' | grep -v 'ceph' | grep 'rpcapi_callserver' | wc -l)
    if [ $pid_check -eq 0 ]; then
        $rpccall_service &> /dev/null &
        if [ $? -eq 0 ]; then
            echo 'service storage rpc call server start OK'
        else
            echo 'service storage rpc call start failure'
        fi
    else
        echo 'service storage rpc call server is already running'
    fi
}


service_start()
{
    storage_service='/storage/storage/service/storage_service.pyc'
    if [ -f "$storage_service" ]; then
        storage_service='python /storage/storage/service/storage_service.pyc'
    else
        storage_service='/storage/storage/service/storage_service.py'
        if [ -f "$storage_service" ]; then
            storage_service='python /storage/storage/service/storage_service.py'
        else
            echo 'storage service file not exists'
        fi
    fi

    pid_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'service' | grep 'storage_service' | wc -l)
    if [ $pid_check -eq 0 ]; then
        $storage_service &> /dev/null &
        if [ $? -eq 0 ]; then
            echo 'service storage service start OK'
        else
            echo 'service storage service start failure'
        fi
    else
        echo 'service storage service server is already running'
    fi
}


storage_start()
{
    cephapi_start
    rpccall_start
    service_start
    restapi_start
}


storage_stop()
{
    pid_check=$(ps -ef | grep -w 'python' | grep 'storage' | wc -l)
    if [ $pid_check -eq 0 ]; then
        echo 'service storage not runing'
    else
        pid=$(ps -ef | grep -w 'python' | grep 'storage' | awk '{print $2}')
        kill $pid
        if [ $? -ne 0 ]; then
            pid=$(ps -ef | grep -w 'python' | grep 'storage' | awk '{print $2}')
            kill -9 $pid
        fi
        echo 'service storage stop OK'
    fi
}


storage_restart()
{
    storage_stop
    sleep 1s
    storage_start
}


storage_status()
{
    cephapi_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'ceph' | grep 'rpcapi_callserver' | wc -l)
    if [ $cephapi_check -eq 0 ]; then
        echo 'service storage ceph api not runing'
    else
        echo 'service storage ceph api is runing'
    fi

    rpccall_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep -v 'ceph' | grep 'rpcapi_callserver' | wc -l)
    if [ $rpccall_check -eq 0 ]; then
        echo 'service storage rpc call not runing'
    else
        echo 'service storage rpc call is runing'
    fi

    restapi_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'restapi_server' | wc -l)
    if [ $restapi_check -eq 0 ]; then
        echo 'service storage rest api not runing'
    else
        echo 'service storage rest api is runing'
    fi

    service_check=$(ps -ef | grep -w 'python' | grep 'storage' | grep 'service' | grep 'storage_service' | wc -l)
    if [ $service_check -eq 0 ]; then
        echo 'service storage service not runing'
    else
        echo 'service storage service is runing'
    fi
}


case "$1" in
    start)
        storage_start
        ;;
    stop)
        storage_stop
        ;;
    restart)
        storage_restart
        ;;
    status)
        storage_status
        ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
esac
